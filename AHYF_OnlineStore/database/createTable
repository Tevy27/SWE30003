CREATE DATABASE IF NOT EXISTS store;

USE store;

CREATE TABLE IF NOT EXISTS Customers (
    customerId INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Accounts (
    accountId INT AUTO_INCREMENT PRIMARY KEY,
    shippingAddress VARCHAR(255),
    billingAddress VARCHAR(255),
    customerId INT,
    FOREIGN KEY (customerId) REFERENCES Customers(customerId)
);

CREATE TABLE IF NOT EXISTS Products (
    productId INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    image VARCHAR(255)
);

//drop 
CREATE TABLE IF NOT EXISTS Catalogues (
    catalogueId INT AUTO_INCREMENT PRIMARY KEY,
    productList TEXT
);

CREATE TABLE IF NOT EXISTS ShoppingCart (
    cartId INT AUTO_INCREMENT PRIMARY KEY,
    customerId INT,
    FOREIGN KEY (customerId) REFERENCES Customers(customerId)
);

CREATE TABLE IF NOT EXISTS ShoppingCartItem (
    itemId INT AUTO_INCREMENT PRIMARY KEY,
    quantity INT NOT NULL,
    productId INT,
    cartId INT,
    FOREIGN KEY (productId) REFERENCES Products(productId),
    FOREIGN KEY (cartId) REFERENCES ShoppingCart(cartId)
);

CREATE TABLE IF NOT EXISTS Orders (
    orderId INT AUTO_INCREMENT PRIMARY KEY,
    orderDate DATE NOT NULL,
    shippingDetails VARCHAR(255),
    paymentStatus ENUM('Pending', 'Paid', 'Failed') NOT NULL,
    accountId INT,
    FOREIGN KEY (accountId) REFERENCES Accounts(accountId)
);

CREATE TABLE IF NOT EXISTS Payments (
    paymentId INT AUTO_INCREMENT PRIMARY KEY,
    paymentMethod ENUM('Credit Card', 'Debit Card', 'PayPal') NOT NULL,
    transactionStatus ENUM('Pending', 'Completed', 'Failed') NOT NULL,
    orderId INT,
    FOREIGN KEY (orderId) REFERENCES Orders(orderId)
);

CREATE TABLE IF NOT EXISTS Shipping (
    shippingId INT AUTO_INCREMENT PRIMARY KEY,
    trackingNumber VARCHAR(255),
    shippingStatus ENUM('Processing', 'Shipped', 'Delivered', 'Returned') NOT NULL,
    orderId INT,
    FOREIGN KEY (orderId) REFERENCES Orders(orderId)
);

CREATE TABLE IF NOT EXISTS SalesReports (
    reportId INT AUTO_INCREMENT PRIMARY KEY,
    reportPeriod ENUM('Daily', 'Weekly', 'Monthly', 'Yearly') NOT NULL,
    salesData TEXT
);

CREATE TABLE IF NOT EXISTS ProductManagement (
    managementId INT AUTO_INCREMENT PRIMARY KEY
);
